name: ghtemplate
on:
  create:
  issues:
    types: opened
jobs:
  prepare-setup-form:
    if: |
      github.event_name == 'create' &&
      !github.event.repository.is_template &&
      !github.event.repository.is_fork &&
      github.event.ref == github.event.master_branch
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          mv .github/ISSUE_TEMPLATE .github/ISSUE_TEMPLATE-OLD || true
          mkdir .github/ISSUE_TEMPLATE
          echo 'blank_issues_enabled: false' > .github/ISSUE_TEMPLATE/config.yml
          cp form.{yml,yaml} .github/ISSUE_TEMPLATE
      - run: mv README.adoc README-OLD.adoc || true
      - run: mv {0} README.adoc
        run: |
          ++++
          <p align=center>
            <b><a href="../../issues/new/choose">Finish setting up your repository</a></b>
          </p>
          ++++
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - run: git add -A && git commit -m "Prepare 'Setup' form" || true
      - run: git push

  handle-setup-form:
    if: |
      github.event_name == 'issues' &&
      !github.event.repository.is_template &&
      !github.event.repository.is_fork
    permissions:
      contents: write
      issues: write
    runs-on: ubuntu-latest
    steps:
      - id: issue-form-parser
        uses: onmax/issue-form-parser@v1.4
      - uses: actions/checkout@v4
      - run: |
          rm -rf .github/ISSUE_TEMPLATE
          mv .github/ISSUE_TEMPLATE-OLD .github/ISSUE_TEMPLATE || true
      - run: |
          rm -f README.adoc
          mv README-OLD.adoc README.adoc || true
      - run: mkdir /tmp/repo && mv * .* /tmp/repo || true
      - run: mv /tmp/repo/.git .
      - id: get-mode
        run: |
          [[ -f action.yml || -f action.yaml ]] && mode=action || true
          [[ -f install.sh || -f install || -f bootstrap.sh || -f bootstrap || -f script/bootstrap || -f setup.sh || -f setup || script/setup ]] && mode=script || true
          echo "mode=$mode" >> "$GITHUB_OUTPUT"
        working-directory: /tmp/repo
      - if: steps.get-mode.outputs.mode == 'action'
        uses: ./../../../../../../../../../../tmp/repo
        with: ${{ fromJSON(steps.parse.outputs.payload) }}
      - id: get-input-env
        if: steps.get-mode.outputs.mode == 'script'
        run: |
          input_env=$(echo "$INPUTS" | jq \
            'to_entries
            | map({key: "INPUT_" + .key | ascii_upcase, value})
            | from_entries')
          echo "input-env=$input_env" >> "$GITHUB_OUTPUT"
        env:
          INPUTS: ${{ steps.parse.outputs.payload }}
      - if: steps.get-mode.outputs.mode == 'script'
        run: |
          for file in install.sh install bootstrap.sh bootstrap script/bootstrap setup.sh setup script/setup; do
            [[ -f "/tmp/repo/$file" ]] || continue
            chmod +x "/tmp/repo/$file"
            "/tmp/repo/$file"
            break
          done
        env: ${{ fromJSON(steps.get-input-env.outputs.input-env) }}
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - run: git add -A && git commit --allow-empty -m "Handle 'Setup' form"
      - run: git push
      - run: gh issue close "$NUMBER" --comment "$COMMENT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUMBER: ${{ github.event.issue.number }}
          COMMENT: >
            You repository has been initialized! Make sure you **manually**
            delete the `.github/workflows/` folder and rename the
            `.github/workflows-NEW/` folder to `.github/workflows/`.

            <sup>You need to do this manually since GitHub Actions workflows
            can't edit other GitHub Actions workflows without a Personal Access
            Token.</sup>
